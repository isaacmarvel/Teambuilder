@page "/About"

<PageTitle>About</PageTitle>

@*<MudText Typo="Typo.h3" GutterBottom="true">Counter</MudText>
<MudText Class="mb-4">Current count: @currentCount</MudText>
<MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">Click me</MudButton>*@
<h1>About</h1>
<br>
<br>
<h3>https://github.com/isaacmarvel/Teambuilder</h3>
<br>
<br>

<p>
    This is a Blazor site used to create and store pokemon teams. It pulls pokemon data from the pokeapi(https://pokeapi.co/) and allows users to create a team of six pokemon based on that data, including moves, abilites, and held items. 
    <br> <br>
    Once a team has been constructed, the team is sent to a SQLite database via EF Core, and the team data is pulled and displayed on the front page.
    <br> <br>
    Instructions to run: Open in in Visual Studio, 
</p>
<br>
     Code Louisville Features Incorporated: <br> <br>
    <ol>
        <li>Connect to an external/3rd party API and read data into your app--I read data from the pokeApi</li>
        <li>Read data from an external file, such as text, JSON, CSV, etc and use that data in your application--I'm reading from a SQLite database I create</li>
        <li>Use a LINQ query to retrieve information from a data structure (such as a list or array) or file--line 92 on Index.razor features .Include(), which I believe is a LINQ query </li>
        <li>Create a dictionary or list, populate it with several values, retrieve at least one value, and use it in your program--got plenty of lists</li>

    </ol>
    <br>
    I intend to continue work on this page, and hope to eventually add: <br> <br>
    <ul>
 
        <li>The ability to choose pokemon's stats.</li>
        <li>A way to search through items and pokemon instead of having to scroll though long lists.</li>
        <li>Images of the pokemon to the front page.</li>
    </ul>
    <br> 
    Eventually, it might also be nice to add: <br> <br>
    <ul>
        <li>User authentication</li>
        <li>The ability to edit and delete teams one has already made.</li>
        <li>Create unit tests for the app</li>
    </ul>

    




@code {
    //private int currentCount = 0;

    //private void IncrementCount()
    //{
    //    currentCount++;
    //}
}

